non terminal String                         s;
non terminal                                informacion, dato, listadoIds, gramatica, reglaGramatical, listadoSimbolos, simbolo, codigoJava;
non terminal                                simbolos, declaracionSimbolos, tipoSimbolo, tipoDato, listadoIdsConComa, expresiones, declaracionExpresion;
non terminal                                expresionRegular, rango, anyTerminal;

/* precedencia */

precedence left     SALTO_DE_LINEA, TABULACION, RETORNO, CADENA;
precedence left     UNA_O_MAS_VECES, CERO_O_MAS_VECES, PUEDE_O_NO_PUEDE;
precedence left     O;
precedence left     PAR_A, COR_A;
precedence left     CARACTER_EXPLICITO;

/* gramatica */

start with s;

s::=                                        informacion SEPARADOR gramatica {: RESULT = "Se completo Exitosamente"; :}
                                            |error SEPARADOR gramatica
                                            |SEPARADOR gramatica
                                            ;

informacion::=                              informacion dato
                                            | dato
                                            ;

dato::=                                     PR_NOMBRE ASIGNACION_INF listadoIds FIN_DE_LINEA
                                            |PR_AUTOR ASIGNACION_INF listadoIds FIN_DE_LINEA
                                            |PR_VERSION ASIGNACION_INF VERSION FIN_DE_LINEA
                                            |PR_LANZAMIENTO ASIGNACION_INF ENTERO FIN_DE_LINEA
                                            |PR_EXTENSION ASIGNACION_INF ID FIN_DE_LINEA
                                            |error FIN_DE_LINEA
                                            ;

listadoIds::=                               listadoIds anyTerminal
                                            |anyTerminal
                                            ;

gramatica::=                                gramatica reglaGramatical
                                            |simbolos SEPARADOR reglaGramatical
                                            ;

reglaGramatical::=                          ID ASIGNACION_GRAMA listadoSimbolos codigoJava FIN_DE_LINEA
                                            |error FIN_DE_LINEA
                                            ;

listadoSimbolos::=                          listadoSimbolos simbolo
                                            |simbolo
                                            ;

simbolo::=                                  ID ASIGNACION_INF ID
                                            |ID
                                            ;

codigoJava::=                               JAVA_CODE
                                            |
                                            ;

simbolos::=                                 simbolos declaracionSimbolos
                                            |expresiones SEPARADOR declaracionSimbolos
                                            ;

declaracionSimbolos::=                      tipoSimbolo tipoDato listadoIdsConComa FIN_DE_LINEA 
                                            |error FIN_DE_LINEA
                                            ;

tipoSimbolo::=                              PR_TERMINAL
                                            |PR_NO PR_TERMINAL
                                            ;

tipoDato::=                                 PR_ENTERO
                                            |PR_REAL
                                            |PR_CADENA
                                            |
                                            ;

listadoIdsConComa::=                        listadoIdsConComa COMA ID
                                            |ID
                                            ;

expresiones::=                              expresiones declaracionExpresion
                                            |declaracionExpresion
                                            ;

declaracionExpresion::=                     ID ASIGNACION_ER expresionRegular FIN_DE_LINEA
                                            |IGNORAR ASIGNACION_ER expresionRegular FIN_DE_LINEA
                                            |error FIN_DE_LINEA
                                            ;

expresionRegular::=                         expresionRegular PUEDE_O_NO_PUEDE
                                            |expresionRegular CERO_O_MAS_VECES
                                            |expresionRegular UNA_O_MAS_VECES
                                            |expresionRegular O expresionRegular
                                            |expresionRegular expresionRegular
                                            |COR_A rango COR_C
                                            |SALTO_DE_LINEA 
                                            |TABULACION
                                            |RETORNO
                                            |CADENA
                                            |COR_A expresionRegular COR_C
                                            |PAR_A expresionRegular PAR_C
                                            |CARACTER_EXPLICITO
                                            ;

rango::=                                    RANGO_LETRAS_MIN
                                            |RANGO_NUMEROS
                                            ;

anyTerminal::=                              PR_NOMBRE|PR_AUTOR|PR_VERSION|PR_LANZAMIENTO|PR_EXTENSION|
                                            CARACTER_EXPLICITO|ENTERO|ID|PR_TERMINAL|PR_NO|PR_ENTERO|PR_REAL|PR_CADENA|COMA;